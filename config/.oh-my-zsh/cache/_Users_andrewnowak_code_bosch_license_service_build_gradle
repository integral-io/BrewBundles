gradle_group_tasks=( ${(Q)"${(z)$(<<\EO:gradle_group_tasks
'bootRun:Runs this project as a Spring Boot application.' 'assemble:Assembles the outputs of this project.' 'bootJar:Assembles an executable jar archive containing the main classes and their dependencies.' 'build:Assembles and tests this project.' 'buildDependents:Assembles and tests this project and all projects that depend on it.' 'buildNeeded:Assembles and tests this project and all projects it depends on.' 'classes:Assembles main classes.' 'clean:Deletes the build directory.' 'jar:Assembles a jar archive containing the main classes.' 'testClasses:Assembles test classes.' 'init:Initializes a new Gradle build.' 'wrapper:Generates Gradle wrapper files.' 'composeBuild:Builds images for services of docker-compose project' 'composeDown:Stops and removes containers of docker-compose project (only if stopContainers is set to true)' 'composeDownForced:Stops and removes containers of docker-compose project' 'composePull:Builds and pulls images of docker-compose project' 'composeUp:Builds and starts containers of docker-compose project' 'javadoc:Generates Javadoc API documentation for the main source code.' 'buildEnvironment:Displays all buildscript dependencies declared in root project '\''license-service'\''.' 'components:Displays the components produced by root project '\''license-service'\''. [incubating]' 'dependencies:Displays all dependencies declared in root project '\''license-service'\''.' 'dependencyInsight:Displays the insight into a specific dependency in root project '\''license-service'\''.' 'dependencyManagement:Displays the dependency management declared in root project '\''license-service'\''.' 'dependentComponents:Displays the dependent components of components in root project '\''license-service'\''. [incubating]' 'help:Displays a help message.' 'model:Displays the configuration model of root project '\''license-service'\''. [incubating]' 'projects:Displays the sub-projects of root project '\''license-service'\''.' 'properties:Displays the properties of root project '\''license-service'\''.' 'tasks:Displays the tasks runnable from root project '\''license-service'\''.' 'jib:Builds a container image to a registry.' 'jibBuildTar:Builds a container image to a tarball.' 'jibDockerBuild:Builds a container image to a Docker daemon.' 'check:Runs all checks.' 'jacocoTestCoverageVerification:Verifies code coverage metrics based on specified rules for the test task.' 'jacocoTestReport:Generates code coverage report for the test task.' 'test:Runs JUnit 4 tests.' 'compileJava:Compiles main Java source.' 'compileTestJava:Compiles test Java source.' 'processResources:Processes main resources.' 'processTestResources:Processes test resources.'
EO:gradle_group_tasks
)}"} )
gradle_all_tasks=( ${(Q)"${(z)$(<<\EO:gradle_all_tasks

EO:gradle_all_tasks
)}"} )
